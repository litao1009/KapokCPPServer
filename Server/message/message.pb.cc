// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msg {

namespace {

const ::google::protobuf::Descriptor* MessageName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageName_reflection_ = NULL;
const ::google::protobuf::Descriptor* Echo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Echo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RenderRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RenderRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AssetResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AssetResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameResponse_PerFrameInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameResponse_PerFrameInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameResponse_PerFrameInfo_PerVertexInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameResponse_PerFrameInfo_PerVertexInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_message_2eproto() {
  protobuf_AddDesc_message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "message.proto");
  GOOGLE_CHECK(file != NULL);
  MessageName_descriptor_ = file->message_type(0);
  static const int MessageName_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageName, message_name_),
  };
  MessageName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageName_descriptor_,
      MessageName::default_instance_,
      MessageName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageName, _has_bits_[0]),
      -1,
      -1,
      sizeof(MessageName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageName, _internal_metadata_),
      -1);
  Echo_descriptor_ = file->message_type(1);
  static const int Echo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Echo, message_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Echo, content_),
  };
  Echo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Echo_descriptor_,
      Echo::default_instance_,
      Echo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Echo, _has_bits_[0]),
      -1,
      -1,
      sizeof(Echo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Echo, _internal_metadata_),
      -1);
  RenderRequest_descriptor_ = file->message_type(2);
  static const int RenderRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenderRequest, message_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenderRequest, asset_uuid_),
  };
  RenderRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RenderRequest_descriptor_,
      RenderRequest::default_instance_,
      RenderRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenderRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(RenderRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenderRequest, _internal_metadata_),
      -1);
  AssetResponse_descriptor_ = file->message_type(3);
  static const int AssetResponse_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetResponse, message_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetResponse, asset_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetResponse, asset_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetResponse, asset_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetResponse, frame_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetResponse, fps_),
  };
  AssetResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AssetResponse_descriptor_,
      AssetResponse::default_instance_,
      AssetResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(AssetResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetResponse, _internal_metadata_),
      -1);
  FrameResponse_descriptor_ = file->message_type(4);
  static const int FrameResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse, message_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse, asset_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse, frame_list_),
  };
  FrameResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameResponse_descriptor_,
      FrameResponse::default_instance_,
      FrameResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(FrameResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse, _internal_metadata_),
      -1);
  FrameResponse_PerFrameInfo_descriptor_ = FrameResponse_descriptor_->nested_type(0);
  static const int FrameResponse_PerFrameInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse_PerFrameInfo, frame_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse_PerFrameInfo, vertex_list_),
  };
  FrameResponse_PerFrameInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameResponse_PerFrameInfo_descriptor_,
      FrameResponse_PerFrameInfo::default_instance_,
      FrameResponse_PerFrameInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse_PerFrameInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(FrameResponse_PerFrameInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse_PerFrameInfo, _internal_metadata_),
      -1);
  FrameResponse_PerFrameInfo_PerVertexInfo_descriptor_ = FrameResponse_PerFrameInfo_descriptor_->nested_type(0);
  static const int FrameResponse_PerFrameInfo_PerVertexInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse_PerFrameInfo_PerVertexInfo, vertex_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse_PerFrameInfo_PerVertexInfo, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse_PerFrameInfo_PerVertexInfo, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse_PerFrameInfo_PerVertexInfo, z_),
  };
  FrameResponse_PerFrameInfo_PerVertexInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameResponse_PerFrameInfo_PerVertexInfo_descriptor_,
      FrameResponse_PerFrameInfo_PerVertexInfo::default_instance_,
      FrameResponse_PerFrameInfo_PerVertexInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse_PerFrameInfo_PerVertexInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(FrameResponse_PerFrameInfo_PerVertexInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameResponse_PerFrameInfo_PerVertexInfo, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageName_descriptor_, &MessageName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Echo_descriptor_, &Echo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RenderRequest_descriptor_, &RenderRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AssetResponse_descriptor_, &AssetResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameResponse_descriptor_, &FrameResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameResponse_PerFrameInfo_descriptor_, &FrameResponse_PerFrameInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameResponse_PerFrameInfo_PerVertexInfo_descriptor_, &FrameResponse_PerFrameInfo_PerVertexInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_message_2eproto() {
  delete MessageName::default_instance_;
  delete MessageName_reflection_;
  delete Echo::default_instance_;
  delete Echo_reflection_;
  delete RenderRequest::default_instance_;
  delete RenderRequest_reflection_;
  delete AssetResponse::default_instance_;
  delete AssetResponse_reflection_;
  delete FrameResponse::default_instance_;
  delete FrameResponse_reflection_;
  delete FrameResponse_PerFrameInfo::default_instance_;
  delete FrameResponse_PerFrameInfo_reflection_;
  delete FrameResponse_PerFrameInfo_PerVertexInfo::default_instance_;
  delete FrameResponse_PerFrameInfo_PerVertexInfo_reflection_;
}

void protobuf_AddDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_message_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmessage.proto\022\003msg\"#\n\013MessageName\022\024\n\014m"
    "essage_name\030\001 \002(\t\"-\n\004Echo\022\024\n\014message_nam"
    "e\030\001 \002(\t\022\017\n\007content\030\002 \002(\t\"9\n\rRenderReques"
    "t\022\024\n\014message_name\030\001 \002(\t\022\022\n\nasset_uuid\030\002 "
    "\002(\t\"\206\001\n\rAssetResponse\022\024\n\014message_name\030\001 "
    "\002(\t\022\022\n\nasset_uuid\030\002 \002(\t\022\022\n\nasset_type\030\003 "
    "\002(\t\022\025\n\rasset_content\030\004 \002(\014\022\023\n\013frame_coun"
    "t\030\005 \002(\r\022\013\n\003fps\030\006 \002(\r\"\240\002\n\rFrameResponse\022\024"
    "\n\014message_name\030\001 \002(\t\022\022\n\nasset_uuid\030\002 \002(\t"
    "\0223\n\nframe_list\030\003 \003(\0132\037.msg.FrameResponse"
    ".PerFrameInfo\032\257\001\n\014PerFrameInfo\022\023\n\013frame_"
    "index\030\001 \002(\r\022B\n\013vertex_list\030\002 \003(\0132-.msg.F"
    "rameResponse.PerFrameInfo.PerVertexInfo\032"
    "F\n\rPerVertexInfo\022\024\n\014vertex_index\030\001 \002(\r\022\t"
    "\n\001x\030\002 \002(\002\022\t\n\001y\030\003 \002(\002\022\t\n\001z\030\004 \002(\002", 591);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  MessageName::default_instance_ = new MessageName();
  Echo::default_instance_ = new Echo();
  RenderRequest::default_instance_ = new RenderRequest();
  AssetResponse::default_instance_ = new AssetResponse();
  FrameResponse::default_instance_ = new FrameResponse();
  FrameResponse_PerFrameInfo::default_instance_ = new FrameResponse_PerFrameInfo();
  FrameResponse_PerFrameInfo_PerVertexInfo::default_instance_ = new FrameResponse_PerFrameInfo_PerVertexInfo();
  MessageName::default_instance_->InitAsDefaultInstance();
  Echo::default_instance_->InitAsDefaultInstance();
  RenderRequest::default_instance_->InitAsDefaultInstance();
  AssetResponse::default_instance_->InitAsDefaultInstance();
  FrameResponse::default_instance_->InitAsDefaultInstance();
  FrameResponse_PerFrameInfo::default_instance_->InitAsDefaultInstance();
  FrameResponse_PerFrameInfo_PerVertexInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_message_2eproto {
  StaticDescriptorInitializer_message_2eproto() {
    protobuf_AddDesc_message_2eproto();
  }
} static_descriptor_initializer_message_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageName::kMessageNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageName::MessageName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.MessageName)
}

void MessageName::InitAsDefaultInstance() {
}

MessageName::MessageName(const MessageName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.MessageName)
}

void MessageName::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  message_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageName::~MessageName() {
  // @@protoc_insertion_point(destructor:msg.MessageName)
  SharedDtor();
}

void MessageName::SharedDtor() {
  message_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MessageName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageName_descriptor_;
}

const MessageName& MessageName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

MessageName* MessageName::default_instance_ = NULL;

MessageName* MessageName::New(::google::protobuf::Arena* arena) const {
  MessageName* n = new MessageName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageName::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.MessageName)
  if (has_message_name()) {
    message_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MessageName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.MessageName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message_name().data(), this->message_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.MessageName.message_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.MessageName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.MessageName)
  return false;
#undef DO_
}

void MessageName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.MessageName)
  // required string message_name = 1;
  if (has_message_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_name().data(), this->message_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.MessageName.message_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.MessageName)
}

::google::protobuf::uint8* MessageName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.MessageName)
  // required string message_name = 1;
  if (has_message_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_name().data(), this->message_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.MessageName.message_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.MessageName)
  return target;
}

int MessageName::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg.MessageName)
  int total_size = 0;

  // required string message_name = 1;
  if (has_message_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_name());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.MessageName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageName* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.MessageName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.MessageName)
    MergeFrom(*source);
  }
}

void MessageName::MergeFrom(const MessageName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.MessageName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message_name()) {
      set_has_message_name();
      message_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MessageName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.MessageName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageName::CopyFrom(const MessageName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.MessageName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageName::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MessageName::Swap(MessageName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageName::InternalSwap(MessageName* other) {
  message_name_.Swap(&other->message_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageName_descriptor_;
  metadata.reflection = MessageName_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageName

// required string message_name = 1;
bool MessageName::has_message_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageName::set_has_message_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageName::clear_has_message_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageName::clear_message_name() {
  message_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_name();
}
 const ::std::string& MessageName::message_name() const {
  // @@protoc_insertion_point(field_get:msg.MessageName.message_name)
  return message_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageName::set_message_name(const ::std::string& value) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.MessageName.message_name)
}
 void MessageName::set_message_name(const char* value) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MessageName.message_name)
}
 void MessageName::set_message_name(const char* value, size_t size) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MessageName.message_name)
}
 ::std::string* MessageName::mutable_message_name() {
  set_has_message_name();
  // @@protoc_insertion_point(field_mutable:msg.MessageName.message_name)
  return message_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageName::release_message_name() {
  // @@protoc_insertion_point(field_release:msg.MessageName.message_name)
  clear_has_message_name();
  return message_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageName::set_allocated_message_name(::std::string* message_name) {
  if (message_name != NULL) {
    set_has_message_name();
  } else {
    clear_has_message_name();
  }
  message_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_name);
  // @@protoc_insertion_point(field_set_allocated:msg.MessageName.message_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Echo::kMessageNameFieldNumber;
const int Echo::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Echo::Echo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.Echo)
}

void Echo::InitAsDefaultInstance() {
}

Echo::Echo(const Echo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.Echo)
}

void Echo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  message_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Echo::~Echo() {
  // @@protoc_insertion_point(destructor:msg.Echo)
  SharedDtor();
}

void Echo::SharedDtor() {
  message_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Echo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Echo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Echo_descriptor_;
}

const Echo& Echo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

Echo* Echo::default_instance_ = NULL;

Echo* Echo::New(::google::protobuf::Arena* arena) const {
  Echo* n = new Echo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Echo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.Echo)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_message_name()) {
      message_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_content()) {
      content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Echo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.Echo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message_name().data(), this->message_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.Echo.message_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_content;
        break;
      }

      // required string content = 2;
      case 2: {
        if (tag == 18) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.Echo.content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.Echo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.Echo)
  return false;
#undef DO_
}

void Echo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.Echo)
  // required string message_name = 1;
  if (has_message_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_name().data(), this->message_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Echo.message_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message_name(), output);
  }

  // required string content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Echo.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.Echo)
}

::google::protobuf::uint8* Echo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.Echo)
  // required string message_name = 1;
  if (has_message_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_name().data(), this->message_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Echo.message_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message_name(), target);
  }

  // required string content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Echo.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.Echo)
  return target;
}

int Echo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg.Echo)
  int total_size = 0;

  if (has_message_name()) {
    // required string message_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_name());
  }

  if (has_content()) {
    // required string content = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  return total_size;
}
int Echo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg.Echo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string message_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_name());

    // required string content = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Echo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.Echo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Echo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Echo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.Echo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.Echo)
    MergeFrom(*source);
  }
}

void Echo::MergeFrom(const Echo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.Echo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message_name()) {
      set_has_message_name();
      message_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_name_);
    }
    if (from.has_content()) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Echo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.Echo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Echo::CopyFrom(const Echo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.Echo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Echo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Echo::Swap(Echo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Echo::InternalSwap(Echo* other) {
  message_name_.Swap(&other->message_name_);
  content_.Swap(&other->content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Echo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Echo_descriptor_;
  metadata.reflection = Echo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Echo

// required string message_name = 1;
bool Echo::has_message_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Echo::set_has_message_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Echo::clear_has_message_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Echo::clear_message_name() {
  message_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_name();
}
 const ::std::string& Echo::message_name() const {
  // @@protoc_insertion_point(field_get:msg.Echo.message_name)
  return message_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Echo::set_message_name(const ::std::string& value) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Echo.message_name)
}
 void Echo::set_message_name(const char* value) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Echo.message_name)
}
 void Echo::set_message_name(const char* value, size_t size) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Echo.message_name)
}
 ::std::string* Echo::mutable_message_name() {
  set_has_message_name();
  // @@protoc_insertion_point(field_mutable:msg.Echo.message_name)
  return message_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Echo::release_message_name() {
  // @@protoc_insertion_point(field_release:msg.Echo.message_name)
  clear_has_message_name();
  return message_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Echo::set_allocated_message_name(::std::string* message_name) {
  if (message_name != NULL) {
    set_has_message_name();
  } else {
    clear_has_message_name();
  }
  message_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_name);
  // @@protoc_insertion_point(field_set_allocated:msg.Echo.message_name)
}

// required string content = 2;
bool Echo::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Echo::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
void Echo::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
void Echo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
 const ::std::string& Echo::content() const {
  // @@protoc_insertion_point(field_get:msg.Echo.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Echo::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Echo.content)
}
 void Echo::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Echo.content)
}
 void Echo::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Echo.content)
}
 ::std::string* Echo::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:msg.Echo.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Echo::release_content() {
  // @@protoc_insertion_point(field_release:msg.Echo.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Echo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:msg.Echo.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenderRequest::kMessageNameFieldNumber;
const int RenderRequest::kAssetUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenderRequest::RenderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.RenderRequest)
}

void RenderRequest::InitAsDefaultInstance() {
}

RenderRequest::RenderRequest(const RenderRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.RenderRequest)
}

void RenderRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  message_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RenderRequest::~RenderRequest() {
  // @@protoc_insertion_point(destructor:msg.RenderRequest)
  SharedDtor();
}

void RenderRequest::SharedDtor() {
  message_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RenderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenderRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenderRequest_descriptor_;
}

const RenderRequest& RenderRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

RenderRequest* RenderRequest::default_instance_ = NULL;

RenderRequest* RenderRequest::New(::google::protobuf::Arena* arena) const {
  RenderRequest* n = new RenderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RenderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.RenderRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_message_name()) {
      message_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_asset_uuid()) {
      asset_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RenderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.RenderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message_name().data(), this->message_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.RenderRequest.message_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_asset_uuid;
        break;
      }

      // required string asset_uuid = 2;
      case 2: {
        if (tag == 18) {
         parse_asset_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_asset_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->asset_uuid().data(), this->asset_uuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.RenderRequest.asset_uuid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.RenderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.RenderRequest)
  return false;
#undef DO_
}

void RenderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.RenderRequest)
  // required string message_name = 1;
  if (has_message_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_name().data(), this->message_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.RenderRequest.message_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message_name(), output);
  }

  // required string asset_uuid = 2;
  if (has_asset_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->asset_uuid().data(), this->asset_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.RenderRequest.asset_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->asset_uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.RenderRequest)
}

::google::protobuf::uint8* RenderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.RenderRequest)
  // required string message_name = 1;
  if (has_message_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_name().data(), this->message_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.RenderRequest.message_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message_name(), target);
  }

  // required string asset_uuid = 2;
  if (has_asset_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->asset_uuid().data(), this->asset_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.RenderRequest.asset_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->asset_uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.RenderRequest)
  return target;
}

int RenderRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg.RenderRequest)
  int total_size = 0;

  if (has_message_name()) {
    // required string message_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_name());
  }

  if (has_asset_uuid()) {
    // required string asset_uuid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asset_uuid());
  }

  return total_size;
}
int RenderRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg.RenderRequest)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string message_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_name());

    // required string asset_uuid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asset_uuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.RenderRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RenderRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RenderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.RenderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.RenderRequest)
    MergeFrom(*source);
  }
}

void RenderRequest::MergeFrom(const RenderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.RenderRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message_name()) {
      set_has_message_name();
      message_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_name_);
    }
    if (from.has_asset_uuid()) {
      set_has_asset_uuid();
      asset_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_uuid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RenderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.RenderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenderRequest::CopyFrom(const RenderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.RenderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenderRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RenderRequest::Swap(RenderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenderRequest::InternalSwap(RenderRequest* other) {
  message_name_.Swap(&other->message_name_);
  asset_uuid_.Swap(&other->asset_uuid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RenderRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RenderRequest_descriptor_;
  metadata.reflection = RenderRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RenderRequest

// required string message_name = 1;
bool RenderRequest::has_message_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RenderRequest::set_has_message_name() {
  _has_bits_[0] |= 0x00000001u;
}
void RenderRequest::clear_has_message_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void RenderRequest::clear_message_name() {
  message_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_name();
}
 const ::std::string& RenderRequest::message_name() const {
  // @@protoc_insertion_point(field_get:msg.RenderRequest.message_name)
  return message_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenderRequest::set_message_name(const ::std::string& value) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.RenderRequest.message_name)
}
 void RenderRequest::set_message_name(const char* value) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.RenderRequest.message_name)
}
 void RenderRequest::set_message_name(const char* value, size_t size) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.RenderRequest.message_name)
}
 ::std::string* RenderRequest::mutable_message_name() {
  set_has_message_name();
  // @@protoc_insertion_point(field_mutable:msg.RenderRequest.message_name)
  return message_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RenderRequest::release_message_name() {
  // @@protoc_insertion_point(field_release:msg.RenderRequest.message_name)
  clear_has_message_name();
  return message_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenderRequest::set_allocated_message_name(::std::string* message_name) {
  if (message_name != NULL) {
    set_has_message_name();
  } else {
    clear_has_message_name();
  }
  message_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_name);
  // @@protoc_insertion_point(field_set_allocated:msg.RenderRequest.message_name)
}

// required string asset_uuid = 2;
bool RenderRequest::has_asset_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RenderRequest::set_has_asset_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
void RenderRequest::clear_has_asset_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
void RenderRequest::clear_asset_uuid() {
  asset_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_asset_uuid();
}
 const ::std::string& RenderRequest::asset_uuid() const {
  // @@protoc_insertion_point(field_get:msg.RenderRequest.asset_uuid)
  return asset_uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenderRequest::set_asset_uuid(const ::std::string& value) {
  set_has_asset_uuid();
  asset_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.RenderRequest.asset_uuid)
}
 void RenderRequest::set_asset_uuid(const char* value) {
  set_has_asset_uuid();
  asset_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.RenderRequest.asset_uuid)
}
 void RenderRequest::set_asset_uuid(const char* value, size_t size) {
  set_has_asset_uuid();
  asset_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.RenderRequest.asset_uuid)
}
 ::std::string* RenderRequest::mutable_asset_uuid() {
  set_has_asset_uuid();
  // @@protoc_insertion_point(field_mutable:msg.RenderRequest.asset_uuid)
  return asset_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RenderRequest::release_asset_uuid() {
  // @@protoc_insertion_point(field_release:msg.RenderRequest.asset_uuid)
  clear_has_asset_uuid();
  return asset_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenderRequest::set_allocated_asset_uuid(::std::string* asset_uuid) {
  if (asset_uuid != NULL) {
    set_has_asset_uuid();
  } else {
    clear_has_asset_uuid();
  }
  asset_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asset_uuid);
  // @@protoc_insertion_point(field_set_allocated:msg.RenderRequest.asset_uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetResponse::kMessageNameFieldNumber;
const int AssetResponse::kAssetUuidFieldNumber;
const int AssetResponse::kAssetTypeFieldNumber;
const int AssetResponse::kAssetContentFieldNumber;
const int AssetResponse::kFrameCountFieldNumber;
const int AssetResponse::kFpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetResponse::AssetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.AssetResponse)
}

void AssetResponse::InitAsDefaultInstance() {
}

AssetResponse::AssetResponse(const AssetResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.AssetResponse)
}

void AssetResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  message_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frame_count_ = 0u;
  fps_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AssetResponse::~AssetResponse() {
  // @@protoc_insertion_point(destructor:msg.AssetResponse)
  SharedDtor();
}

void AssetResponse::SharedDtor() {
  message_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AssetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssetResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AssetResponse_descriptor_;
}

const AssetResponse& AssetResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

AssetResponse* AssetResponse::default_instance_ = NULL;

AssetResponse* AssetResponse::New(::google::protobuf::Arena* arena) const {
  AssetResponse* n = new AssetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.AssetResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AssetResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AssetResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(frame_count_, fps_);
    if (has_message_name()) {
      message_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_asset_uuid()) {
      asset_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_asset_type()) {
      asset_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_asset_content()) {
      asset_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AssetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.AssetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message_name().data(), this->message_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.AssetResponse.message_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_asset_uuid;
        break;
      }

      // required string asset_uuid = 2;
      case 2: {
        if (tag == 18) {
         parse_asset_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_asset_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->asset_uuid().data(), this->asset_uuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.AssetResponse.asset_uuid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_asset_type;
        break;
      }

      // required string asset_type = 3;
      case 3: {
        if (tag == 26) {
         parse_asset_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_asset_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->asset_type().data(), this->asset_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.AssetResponse.asset_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_asset_content;
        break;
      }

      // required bytes asset_content = 4;
      case 4: {
        if (tag == 34) {
         parse_asset_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_asset_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_frame_count;
        break;
      }

      // required uint32 frame_count = 5;
      case 5: {
        if (tag == 40) {
         parse_frame_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frame_count_)));
          set_has_frame_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_fps;
        break;
      }

      // required uint32 fps = 6;
      case 6: {
        if (tag == 48) {
         parse_fps:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fps_)));
          set_has_fps();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.AssetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.AssetResponse)
  return false;
#undef DO_
}

void AssetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.AssetResponse)
  // required string message_name = 1;
  if (has_message_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_name().data(), this->message_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.AssetResponse.message_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message_name(), output);
  }

  // required string asset_uuid = 2;
  if (has_asset_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->asset_uuid().data(), this->asset_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.AssetResponse.asset_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->asset_uuid(), output);
  }

  // required string asset_type = 3;
  if (has_asset_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->asset_type().data(), this->asset_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.AssetResponse.asset_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->asset_type(), output);
  }

  // required bytes asset_content = 4;
  if (has_asset_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->asset_content(), output);
  }

  // required uint32 frame_count = 5;
  if (has_frame_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->frame_count(), output);
  }

  // required uint32 fps = 6;
  if (has_fps()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->fps(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.AssetResponse)
}

::google::protobuf::uint8* AssetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.AssetResponse)
  // required string message_name = 1;
  if (has_message_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_name().data(), this->message_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.AssetResponse.message_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message_name(), target);
  }

  // required string asset_uuid = 2;
  if (has_asset_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->asset_uuid().data(), this->asset_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.AssetResponse.asset_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->asset_uuid(), target);
  }

  // required string asset_type = 3;
  if (has_asset_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->asset_type().data(), this->asset_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.AssetResponse.asset_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->asset_type(), target);
  }

  // required bytes asset_content = 4;
  if (has_asset_content()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->asset_content(), target);
  }

  // required uint32 frame_count = 5;
  if (has_frame_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->frame_count(), target);
  }

  // required uint32 fps = 6;
  if (has_fps()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->fps(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.AssetResponse)
  return target;
}

int AssetResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg.AssetResponse)
  int total_size = 0;

  if (has_message_name()) {
    // required string message_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_name());
  }

  if (has_asset_uuid()) {
    // required string asset_uuid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asset_uuid());
  }

  if (has_asset_type()) {
    // required string asset_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asset_type());
  }

  if (has_asset_content()) {
    // required bytes asset_content = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->asset_content());
  }

  if (has_frame_count()) {
    // required uint32 frame_count = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frame_count());
  }

  if (has_fps()) {
    // required uint32 fps = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fps());
  }

  return total_size;
}
int AssetResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg.AssetResponse)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string message_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_name());

    // required string asset_uuid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asset_uuid());

    // required string asset_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asset_type());

    // required bytes asset_content = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->asset_content());

    // required uint32 frame_count = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frame_count());

    // required uint32 fps = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fps());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.AssetResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AssetResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.AssetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.AssetResponse)
    MergeFrom(*source);
  }
}

void AssetResponse::MergeFrom(const AssetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.AssetResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message_name()) {
      set_has_message_name();
      message_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_name_);
    }
    if (from.has_asset_uuid()) {
      set_has_asset_uuid();
      asset_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_uuid_);
    }
    if (from.has_asset_type()) {
      set_has_asset_type();
      asset_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_type_);
    }
    if (from.has_asset_content()) {
      set_has_asset_content();
      asset_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_content_);
    }
    if (from.has_frame_count()) {
      set_frame_count(from.frame_count());
    }
    if (from.has_fps()) {
      set_fps(from.fps());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AssetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.AssetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetResponse::CopyFrom(const AssetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.AssetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void AssetResponse::Swap(AssetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetResponse::InternalSwap(AssetResponse* other) {
  message_name_.Swap(&other->message_name_);
  asset_uuid_.Swap(&other->asset_uuid_);
  asset_type_.Swap(&other->asset_type_);
  asset_content_.Swap(&other->asset_content_);
  std::swap(frame_count_, other->frame_count_);
  std::swap(fps_, other->fps_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssetResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AssetResponse_descriptor_;
  metadata.reflection = AssetResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AssetResponse

// required string message_name = 1;
bool AssetResponse::has_message_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AssetResponse::set_has_message_name() {
  _has_bits_[0] |= 0x00000001u;
}
void AssetResponse::clear_has_message_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void AssetResponse::clear_message_name() {
  message_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_name();
}
 const ::std::string& AssetResponse::message_name() const {
  // @@protoc_insertion_point(field_get:msg.AssetResponse.message_name)
  return message_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetResponse::set_message_name(const ::std::string& value) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.AssetResponse.message_name)
}
 void AssetResponse::set_message_name(const char* value) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.AssetResponse.message_name)
}
 void AssetResponse::set_message_name(const char* value, size_t size) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.AssetResponse.message_name)
}
 ::std::string* AssetResponse::mutable_message_name() {
  set_has_message_name();
  // @@protoc_insertion_point(field_mutable:msg.AssetResponse.message_name)
  return message_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AssetResponse::release_message_name() {
  // @@protoc_insertion_point(field_release:msg.AssetResponse.message_name)
  clear_has_message_name();
  return message_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetResponse::set_allocated_message_name(::std::string* message_name) {
  if (message_name != NULL) {
    set_has_message_name();
  } else {
    clear_has_message_name();
  }
  message_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_name);
  // @@protoc_insertion_point(field_set_allocated:msg.AssetResponse.message_name)
}

// required string asset_uuid = 2;
bool AssetResponse::has_asset_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AssetResponse::set_has_asset_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
void AssetResponse::clear_has_asset_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AssetResponse::clear_asset_uuid() {
  asset_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_asset_uuid();
}
 const ::std::string& AssetResponse::asset_uuid() const {
  // @@protoc_insertion_point(field_get:msg.AssetResponse.asset_uuid)
  return asset_uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetResponse::set_asset_uuid(const ::std::string& value) {
  set_has_asset_uuid();
  asset_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.AssetResponse.asset_uuid)
}
 void AssetResponse::set_asset_uuid(const char* value) {
  set_has_asset_uuid();
  asset_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.AssetResponse.asset_uuid)
}
 void AssetResponse::set_asset_uuid(const char* value, size_t size) {
  set_has_asset_uuid();
  asset_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.AssetResponse.asset_uuid)
}
 ::std::string* AssetResponse::mutable_asset_uuid() {
  set_has_asset_uuid();
  // @@protoc_insertion_point(field_mutable:msg.AssetResponse.asset_uuid)
  return asset_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AssetResponse::release_asset_uuid() {
  // @@protoc_insertion_point(field_release:msg.AssetResponse.asset_uuid)
  clear_has_asset_uuid();
  return asset_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetResponse::set_allocated_asset_uuid(::std::string* asset_uuid) {
  if (asset_uuid != NULL) {
    set_has_asset_uuid();
  } else {
    clear_has_asset_uuid();
  }
  asset_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asset_uuid);
  // @@protoc_insertion_point(field_set_allocated:msg.AssetResponse.asset_uuid)
}

// required string asset_type = 3;
bool AssetResponse::has_asset_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AssetResponse::set_has_asset_type() {
  _has_bits_[0] |= 0x00000004u;
}
void AssetResponse::clear_has_asset_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void AssetResponse::clear_asset_type() {
  asset_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_asset_type();
}
 const ::std::string& AssetResponse::asset_type() const {
  // @@protoc_insertion_point(field_get:msg.AssetResponse.asset_type)
  return asset_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetResponse::set_asset_type(const ::std::string& value) {
  set_has_asset_type();
  asset_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.AssetResponse.asset_type)
}
 void AssetResponse::set_asset_type(const char* value) {
  set_has_asset_type();
  asset_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.AssetResponse.asset_type)
}
 void AssetResponse::set_asset_type(const char* value, size_t size) {
  set_has_asset_type();
  asset_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.AssetResponse.asset_type)
}
 ::std::string* AssetResponse::mutable_asset_type() {
  set_has_asset_type();
  // @@protoc_insertion_point(field_mutable:msg.AssetResponse.asset_type)
  return asset_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AssetResponse::release_asset_type() {
  // @@protoc_insertion_point(field_release:msg.AssetResponse.asset_type)
  clear_has_asset_type();
  return asset_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetResponse::set_allocated_asset_type(::std::string* asset_type) {
  if (asset_type != NULL) {
    set_has_asset_type();
  } else {
    clear_has_asset_type();
  }
  asset_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asset_type);
  // @@protoc_insertion_point(field_set_allocated:msg.AssetResponse.asset_type)
}

// required bytes asset_content = 4;
bool AssetResponse::has_asset_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AssetResponse::set_has_asset_content() {
  _has_bits_[0] |= 0x00000008u;
}
void AssetResponse::clear_has_asset_content() {
  _has_bits_[0] &= ~0x00000008u;
}
void AssetResponse::clear_asset_content() {
  asset_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_asset_content();
}
 const ::std::string& AssetResponse::asset_content() const {
  // @@protoc_insertion_point(field_get:msg.AssetResponse.asset_content)
  return asset_content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetResponse::set_asset_content(const ::std::string& value) {
  set_has_asset_content();
  asset_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.AssetResponse.asset_content)
}
 void AssetResponse::set_asset_content(const char* value) {
  set_has_asset_content();
  asset_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.AssetResponse.asset_content)
}
 void AssetResponse::set_asset_content(const void* value, size_t size) {
  set_has_asset_content();
  asset_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.AssetResponse.asset_content)
}
 ::std::string* AssetResponse::mutable_asset_content() {
  set_has_asset_content();
  // @@protoc_insertion_point(field_mutable:msg.AssetResponse.asset_content)
  return asset_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AssetResponse::release_asset_content() {
  // @@protoc_insertion_point(field_release:msg.AssetResponse.asset_content)
  clear_has_asset_content();
  return asset_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetResponse::set_allocated_asset_content(::std::string* asset_content) {
  if (asset_content != NULL) {
    set_has_asset_content();
  } else {
    clear_has_asset_content();
  }
  asset_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asset_content);
  // @@protoc_insertion_point(field_set_allocated:msg.AssetResponse.asset_content)
}

// required uint32 frame_count = 5;
bool AssetResponse::has_frame_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AssetResponse::set_has_frame_count() {
  _has_bits_[0] |= 0x00000010u;
}
void AssetResponse::clear_has_frame_count() {
  _has_bits_[0] &= ~0x00000010u;
}
void AssetResponse::clear_frame_count() {
  frame_count_ = 0u;
  clear_has_frame_count();
}
 ::google::protobuf::uint32 AssetResponse::frame_count() const {
  // @@protoc_insertion_point(field_get:msg.AssetResponse.frame_count)
  return frame_count_;
}
 void AssetResponse::set_frame_count(::google::protobuf::uint32 value) {
  set_has_frame_count();
  frame_count_ = value;
  // @@protoc_insertion_point(field_set:msg.AssetResponse.frame_count)
}

// required uint32 fps = 6;
bool AssetResponse::has_fps() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AssetResponse::set_has_fps() {
  _has_bits_[0] |= 0x00000020u;
}
void AssetResponse::clear_has_fps() {
  _has_bits_[0] &= ~0x00000020u;
}
void AssetResponse::clear_fps() {
  fps_ = 0u;
  clear_has_fps();
}
 ::google::protobuf::uint32 AssetResponse::fps() const {
  // @@protoc_insertion_point(field_get:msg.AssetResponse.fps)
  return fps_;
}
 void AssetResponse::set_fps(::google::protobuf::uint32 value) {
  set_has_fps();
  fps_ = value;
  // @@protoc_insertion_point(field_set:msg.AssetResponse.fps)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameResponse_PerFrameInfo_PerVertexInfo::kVertexIndexFieldNumber;
const int FrameResponse_PerFrameInfo_PerVertexInfo::kXFieldNumber;
const int FrameResponse_PerFrameInfo_PerVertexInfo::kYFieldNumber;
const int FrameResponse_PerFrameInfo_PerVertexInfo::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameResponse_PerFrameInfo_PerVertexInfo::FrameResponse_PerFrameInfo_PerVertexInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
}

void FrameResponse_PerFrameInfo_PerVertexInfo::InitAsDefaultInstance() {
}

FrameResponse_PerFrameInfo_PerVertexInfo::FrameResponse_PerFrameInfo_PerVertexInfo(const FrameResponse_PerFrameInfo_PerVertexInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
}

void FrameResponse_PerFrameInfo_PerVertexInfo::SharedCtor() {
  _cached_size_ = 0;
  vertex_index_ = 0u;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FrameResponse_PerFrameInfo_PerVertexInfo::~FrameResponse_PerFrameInfo_PerVertexInfo() {
  // @@protoc_insertion_point(destructor:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  SharedDtor();
}

void FrameResponse_PerFrameInfo_PerVertexInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FrameResponse_PerFrameInfo_PerVertexInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameResponse_PerFrameInfo_PerVertexInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameResponse_PerFrameInfo_PerVertexInfo_descriptor_;
}

const FrameResponse_PerFrameInfo_PerVertexInfo& FrameResponse_PerFrameInfo_PerVertexInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

FrameResponse_PerFrameInfo_PerVertexInfo* FrameResponse_PerFrameInfo_PerVertexInfo::default_instance_ = NULL;

FrameResponse_PerFrameInfo_PerVertexInfo* FrameResponse_PerFrameInfo_PerVertexInfo::New(::google::protobuf::Arena* arena) const {
  FrameResponse_PerFrameInfo_PerVertexInfo* n = new FrameResponse_PerFrameInfo_PerVertexInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameResponse_PerFrameInfo_PerVertexInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FrameResponse_PerFrameInfo_PerVertexInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FrameResponse_PerFrameInfo_PerVertexInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vertex_index_, z_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameResponse_PerFrameInfo_PerVertexInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 vertex_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vertex_index_)));
          set_has_vertex_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_x;
        break;
      }

      // required float x = 2;
      case 2: {
        if (tag == 21) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_y;
        break;
      }

      // required float y = 3;
      case 3: {
        if (tag == 29) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_z;
        break;
      }

      // required float z = 4;
      case 4: {
        if (tag == 37) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  return false;
#undef DO_
}

void FrameResponse_PerFrameInfo_PerVertexInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  // required uint32 vertex_index = 1;
  if (has_vertex_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vertex_index(), output);
  }

  // required float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // required float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // required float z = 4;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
}

::google::protobuf::uint8* FrameResponse_PerFrameInfo_PerVertexInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  // required uint32 vertex_index = 1;
  if (has_vertex_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vertex_index(), target);
  }

  // required float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // required float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // required float z = 4;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  return target;
}

int FrameResponse_PerFrameInfo_PerVertexInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  int total_size = 0;

  if (has_vertex_index()) {
    // required uint32 vertex_index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vertex_index());
  }

  if (has_x()) {
    // required float x = 2;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 3;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
int FrameResponse_PerFrameInfo_PerVertexInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 vertex_index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vertex_index());

    // required float x = 2;
    total_size += 1 + 4;

    // required float y = 3;
    total_size += 1 + 4;

    // required float z = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameResponse_PerFrameInfo_PerVertexInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FrameResponse_PerFrameInfo_PerVertexInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameResponse_PerFrameInfo_PerVertexInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
    MergeFrom(*source);
  }
}

void FrameResponse_PerFrameInfo_PerVertexInfo::MergeFrom(const FrameResponse_PerFrameInfo_PerVertexInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vertex_index()) {
      set_vertex_index(from.vertex_index());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void FrameResponse_PerFrameInfo_PerVertexInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameResponse_PerFrameInfo_PerVertexInfo::CopyFrom(const FrameResponse_PerFrameInfo_PerVertexInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.FrameResponse.PerFrameInfo.PerVertexInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameResponse_PerFrameInfo_PerVertexInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void FrameResponse_PerFrameInfo_PerVertexInfo::Swap(FrameResponse_PerFrameInfo_PerVertexInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameResponse_PerFrameInfo_PerVertexInfo::InternalSwap(FrameResponse_PerFrameInfo_PerVertexInfo* other) {
  std::swap(vertex_index_, other->vertex_index_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameResponse_PerFrameInfo_PerVertexInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameResponse_PerFrameInfo_PerVertexInfo_descriptor_;
  metadata.reflection = FrameResponse_PerFrameInfo_PerVertexInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameResponse_PerFrameInfo::kFrameIndexFieldNumber;
const int FrameResponse_PerFrameInfo::kVertexListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameResponse_PerFrameInfo::FrameResponse_PerFrameInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.FrameResponse.PerFrameInfo)
}

void FrameResponse_PerFrameInfo::InitAsDefaultInstance() {
}

FrameResponse_PerFrameInfo::FrameResponse_PerFrameInfo(const FrameResponse_PerFrameInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.FrameResponse.PerFrameInfo)
}

void FrameResponse_PerFrameInfo::SharedCtor() {
  _cached_size_ = 0;
  frame_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FrameResponse_PerFrameInfo::~FrameResponse_PerFrameInfo() {
  // @@protoc_insertion_point(destructor:msg.FrameResponse.PerFrameInfo)
  SharedDtor();
}

void FrameResponse_PerFrameInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FrameResponse_PerFrameInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameResponse_PerFrameInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameResponse_PerFrameInfo_descriptor_;
}

const FrameResponse_PerFrameInfo& FrameResponse_PerFrameInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

FrameResponse_PerFrameInfo* FrameResponse_PerFrameInfo::default_instance_ = NULL;

FrameResponse_PerFrameInfo* FrameResponse_PerFrameInfo::New(::google::protobuf::Arena* arena) const {
  FrameResponse_PerFrameInfo* n = new FrameResponse_PerFrameInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameResponse_PerFrameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.FrameResponse.PerFrameInfo)
  frame_index_ = 0u;
  vertex_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameResponse_PerFrameInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.FrameResponse.PerFrameInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 frame_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frame_index_)));
          set_has_frame_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_vertex_list;
        break;
      }

      // repeated .msg.FrameResponse.PerFrameInfo.PerVertexInfo vertex_list = 2;
      case 2: {
        if (tag == 18) {
         parse_vertex_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_vertex_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vertex_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_vertex_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.FrameResponse.PerFrameInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.FrameResponse.PerFrameInfo)
  return false;
#undef DO_
}

void FrameResponse_PerFrameInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.FrameResponse.PerFrameInfo)
  // required uint32 frame_index = 1;
  if (has_frame_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->frame_index(), output);
  }

  // repeated .msg.FrameResponse.PerFrameInfo.PerVertexInfo vertex_list = 2;
  for (unsigned int i = 0, n = this->vertex_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vertex_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.FrameResponse.PerFrameInfo)
}

::google::protobuf::uint8* FrameResponse_PerFrameInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.FrameResponse.PerFrameInfo)
  // required uint32 frame_index = 1;
  if (has_frame_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->frame_index(), target);
  }

  // repeated .msg.FrameResponse.PerFrameInfo.PerVertexInfo vertex_list = 2;
  for (unsigned int i = 0, n = this->vertex_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->vertex_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.FrameResponse.PerFrameInfo)
  return target;
}

int FrameResponse_PerFrameInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg.FrameResponse.PerFrameInfo)
  int total_size = 0;

  // required uint32 frame_index = 1;
  if (has_frame_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frame_index());
  }
  // repeated .msg.FrameResponse.PerFrameInfo.PerVertexInfo vertex_list = 2;
  total_size += 1 * this->vertex_list_size();
  for (int i = 0; i < this->vertex_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vertex_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameResponse_PerFrameInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.FrameResponse.PerFrameInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FrameResponse_PerFrameInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameResponse_PerFrameInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.FrameResponse.PerFrameInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.FrameResponse.PerFrameInfo)
    MergeFrom(*source);
  }
}

void FrameResponse_PerFrameInfo::MergeFrom(const FrameResponse_PerFrameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.FrameResponse.PerFrameInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  vertex_list_.MergeFrom(from.vertex_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_frame_index()) {
      set_frame_index(from.frame_index());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void FrameResponse_PerFrameInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.FrameResponse.PerFrameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameResponse_PerFrameInfo::CopyFrom(const FrameResponse_PerFrameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.FrameResponse.PerFrameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameResponse_PerFrameInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->vertex_list())) return false;
  return true;
}

void FrameResponse_PerFrameInfo::Swap(FrameResponse_PerFrameInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameResponse_PerFrameInfo::InternalSwap(FrameResponse_PerFrameInfo* other) {
  std::swap(frame_index_, other->frame_index_);
  vertex_list_.UnsafeArenaSwap(&other->vertex_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameResponse_PerFrameInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameResponse_PerFrameInfo_descriptor_;
  metadata.reflection = FrameResponse_PerFrameInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameResponse::kMessageNameFieldNumber;
const int FrameResponse::kAssetUuidFieldNumber;
const int FrameResponse::kFrameListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameResponse::FrameResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.FrameResponse)
}

void FrameResponse::InitAsDefaultInstance() {
}

FrameResponse::FrameResponse(const FrameResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.FrameResponse)
}

void FrameResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  message_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FrameResponse::~FrameResponse() {
  // @@protoc_insertion_point(destructor:msg.FrameResponse)
  SharedDtor();
}

void FrameResponse::SharedDtor() {
  message_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FrameResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameResponse_descriptor_;
}

const FrameResponse& FrameResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

FrameResponse* FrameResponse::default_instance_ = NULL;

FrameResponse* FrameResponse::New(::google::protobuf::Arena* arena) const {
  FrameResponse* n = new FrameResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.FrameResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_message_name()) {
      message_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_asset_uuid()) {
      asset_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  frame_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.FrameResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message_name().data(), this->message_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.FrameResponse.message_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_asset_uuid;
        break;
      }

      // required string asset_uuid = 2;
      case 2: {
        if (tag == 18) {
         parse_asset_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_asset_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->asset_uuid().data(), this->asset_uuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.FrameResponse.asset_uuid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_frame_list;
        break;
      }

      // repeated .msg.FrameResponse.PerFrameInfo frame_list = 3;
      case 3: {
        if (tag == 26) {
         parse_frame_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_frame_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frame_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_frame_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.FrameResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.FrameResponse)
  return false;
#undef DO_
}

void FrameResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.FrameResponse)
  // required string message_name = 1;
  if (has_message_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_name().data(), this->message_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.FrameResponse.message_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message_name(), output);
  }

  // required string asset_uuid = 2;
  if (has_asset_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->asset_uuid().data(), this->asset_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.FrameResponse.asset_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->asset_uuid(), output);
  }

  // repeated .msg.FrameResponse.PerFrameInfo frame_list = 3;
  for (unsigned int i = 0, n = this->frame_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->frame_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.FrameResponse)
}

::google::protobuf::uint8* FrameResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.FrameResponse)
  // required string message_name = 1;
  if (has_message_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_name().data(), this->message_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.FrameResponse.message_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message_name(), target);
  }

  // required string asset_uuid = 2;
  if (has_asset_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->asset_uuid().data(), this->asset_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.FrameResponse.asset_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->asset_uuid(), target);
  }

  // repeated .msg.FrameResponse.PerFrameInfo frame_list = 3;
  for (unsigned int i = 0, n = this->frame_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->frame_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.FrameResponse)
  return target;
}

int FrameResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg.FrameResponse)
  int total_size = 0;

  if (has_message_name()) {
    // required string message_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_name());
  }

  if (has_asset_uuid()) {
    // required string asset_uuid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asset_uuid());
  }

  return total_size;
}
int FrameResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg.FrameResponse)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string message_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_name());

    // required string asset_uuid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asset_uuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .msg.FrameResponse.PerFrameInfo frame_list = 3;
  total_size += 1 * this->frame_list_size();
  for (int i = 0; i < this->frame_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frame_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.FrameResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FrameResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.FrameResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.FrameResponse)
    MergeFrom(*source);
  }
}

void FrameResponse::MergeFrom(const FrameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.FrameResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frame_list_.MergeFrom(from.frame_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message_name()) {
      set_has_message_name();
      message_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_name_);
    }
    if (from.has_asset_uuid()) {
      set_has_asset_uuid();
      asset_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_uuid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void FrameResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.FrameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameResponse::CopyFrom(const FrameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.FrameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->frame_list())) return false;
  return true;
}

void FrameResponse::Swap(FrameResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameResponse::InternalSwap(FrameResponse* other) {
  message_name_.Swap(&other->message_name_);
  asset_uuid_.Swap(&other->asset_uuid_);
  frame_list_.UnsafeArenaSwap(&other->frame_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameResponse_descriptor_;
  metadata.reflection = FrameResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameResponse_PerFrameInfo_PerVertexInfo

// required uint32 vertex_index = 1;
bool FrameResponse_PerFrameInfo_PerVertexInfo::has_vertex_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::set_has_vertex_index() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::clear_has_vertex_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::clear_vertex_index() {
  vertex_index_ = 0u;
  clear_has_vertex_index();
}
 ::google::protobuf::uint32 FrameResponse_PerFrameInfo_PerVertexInfo::vertex_index() const {
  // @@protoc_insertion_point(field_get:msg.FrameResponse.PerFrameInfo.PerVertexInfo.vertex_index)
  return vertex_index_;
}
 void FrameResponse_PerFrameInfo_PerVertexInfo::set_vertex_index(::google::protobuf::uint32 value) {
  set_has_vertex_index();
  vertex_index_ = value;
  // @@protoc_insertion_point(field_set:msg.FrameResponse.PerFrameInfo.PerVertexInfo.vertex_index)
}

// required float x = 2;
bool FrameResponse_PerFrameInfo_PerVertexInfo::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::clear_x() {
  x_ = 0;
  clear_has_x();
}
 float FrameResponse_PerFrameInfo_PerVertexInfo::x() const {
  // @@protoc_insertion_point(field_get:msg.FrameResponse.PerFrameInfo.PerVertexInfo.x)
  return x_;
}
 void FrameResponse_PerFrameInfo_PerVertexInfo::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:msg.FrameResponse.PerFrameInfo.PerVertexInfo.x)
}

// required float y = 3;
bool FrameResponse_PerFrameInfo_PerVertexInfo::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::clear_y() {
  y_ = 0;
  clear_has_y();
}
 float FrameResponse_PerFrameInfo_PerVertexInfo::y() const {
  // @@protoc_insertion_point(field_get:msg.FrameResponse.PerFrameInfo.PerVertexInfo.y)
  return y_;
}
 void FrameResponse_PerFrameInfo_PerVertexInfo::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:msg.FrameResponse.PerFrameInfo.PerVertexInfo.y)
}

// required float z = 4;
bool FrameResponse_PerFrameInfo_PerVertexInfo::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
void FrameResponse_PerFrameInfo_PerVertexInfo::clear_z() {
  z_ = 0;
  clear_has_z();
}
 float FrameResponse_PerFrameInfo_PerVertexInfo::z() const {
  // @@protoc_insertion_point(field_get:msg.FrameResponse.PerFrameInfo.PerVertexInfo.z)
  return z_;
}
 void FrameResponse_PerFrameInfo_PerVertexInfo::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:msg.FrameResponse.PerFrameInfo.PerVertexInfo.z)
}

// -------------------------------------------------------------------

// FrameResponse_PerFrameInfo

// required uint32 frame_index = 1;
bool FrameResponse_PerFrameInfo::has_frame_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameResponse_PerFrameInfo::set_has_frame_index() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameResponse_PerFrameInfo::clear_has_frame_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameResponse_PerFrameInfo::clear_frame_index() {
  frame_index_ = 0u;
  clear_has_frame_index();
}
 ::google::protobuf::uint32 FrameResponse_PerFrameInfo::frame_index() const {
  // @@protoc_insertion_point(field_get:msg.FrameResponse.PerFrameInfo.frame_index)
  return frame_index_;
}
 void FrameResponse_PerFrameInfo::set_frame_index(::google::protobuf::uint32 value) {
  set_has_frame_index();
  frame_index_ = value;
  // @@protoc_insertion_point(field_set:msg.FrameResponse.PerFrameInfo.frame_index)
}

// repeated .msg.FrameResponse.PerFrameInfo.PerVertexInfo vertex_list = 2;
int FrameResponse_PerFrameInfo::vertex_list_size() const {
  return vertex_list_.size();
}
void FrameResponse_PerFrameInfo::clear_vertex_list() {
  vertex_list_.Clear();
}
const ::msg::FrameResponse_PerFrameInfo_PerVertexInfo& FrameResponse_PerFrameInfo::vertex_list(int index) const {
  // @@protoc_insertion_point(field_get:msg.FrameResponse.PerFrameInfo.vertex_list)
  return vertex_list_.Get(index);
}
::msg::FrameResponse_PerFrameInfo_PerVertexInfo* FrameResponse_PerFrameInfo::mutable_vertex_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg.FrameResponse.PerFrameInfo.vertex_list)
  return vertex_list_.Mutable(index);
}
::msg::FrameResponse_PerFrameInfo_PerVertexInfo* FrameResponse_PerFrameInfo::add_vertex_list() {
  // @@protoc_insertion_point(field_add:msg.FrameResponse.PerFrameInfo.vertex_list)
  return vertex_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg::FrameResponse_PerFrameInfo_PerVertexInfo >*
FrameResponse_PerFrameInfo::mutable_vertex_list() {
  // @@protoc_insertion_point(field_mutable_list:msg.FrameResponse.PerFrameInfo.vertex_list)
  return &vertex_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg::FrameResponse_PerFrameInfo_PerVertexInfo >&
FrameResponse_PerFrameInfo::vertex_list() const {
  // @@protoc_insertion_point(field_list:msg.FrameResponse.PerFrameInfo.vertex_list)
  return vertex_list_;
}

// -------------------------------------------------------------------

// FrameResponse

// required string message_name = 1;
bool FrameResponse::has_message_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameResponse::set_has_message_name() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameResponse::clear_has_message_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameResponse::clear_message_name() {
  message_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_name();
}
 const ::std::string& FrameResponse::message_name() const {
  // @@protoc_insertion_point(field_get:msg.FrameResponse.message_name)
  return message_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FrameResponse::set_message_name(const ::std::string& value) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.FrameResponse.message_name)
}
 void FrameResponse::set_message_name(const char* value) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.FrameResponse.message_name)
}
 void FrameResponse::set_message_name(const char* value, size_t size) {
  set_has_message_name();
  message_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.FrameResponse.message_name)
}
 ::std::string* FrameResponse::mutable_message_name() {
  set_has_message_name();
  // @@protoc_insertion_point(field_mutable:msg.FrameResponse.message_name)
  return message_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FrameResponse::release_message_name() {
  // @@protoc_insertion_point(field_release:msg.FrameResponse.message_name)
  clear_has_message_name();
  return message_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FrameResponse::set_allocated_message_name(::std::string* message_name) {
  if (message_name != NULL) {
    set_has_message_name();
  } else {
    clear_has_message_name();
  }
  message_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_name);
  // @@protoc_insertion_point(field_set_allocated:msg.FrameResponse.message_name)
}

// required string asset_uuid = 2;
bool FrameResponse::has_asset_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FrameResponse::set_has_asset_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
void FrameResponse::clear_has_asset_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
void FrameResponse::clear_asset_uuid() {
  asset_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_asset_uuid();
}
 const ::std::string& FrameResponse::asset_uuid() const {
  // @@protoc_insertion_point(field_get:msg.FrameResponse.asset_uuid)
  return asset_uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FrameResponse::set_asset_uuid(const ::std::string& value) {
  set_has_asset_uuid();
  asset_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.FrameResponse.asset_uuid)
}
 void FrameResponse::set_asset_uuid(const char* value) {
  set_has_asset_uuid();
  asset_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.FrameResponse.asset_uuid)
}
 void FrameResponse::set_asset_uuid(const char* value, size_t size) {
  set_has_asset_uuid();
  asset_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.FrameResponse.asset_uuid)
}
 ::std::string* FrameResponse::mutable_asset_uuid() {
  set_has_asset_uuid();
  // @@protoc_insertion_point(field_mutable:msg.FrameResponse.asset_uuid)
  return asset_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FrameResponse::release_asset_uuid() {
  // @@protoc_insertion_point(field_release:msg.FrameResponse.asset_uuid)
  clear_has_asset_uuid();
  return asset_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FrameResponse::set_allocated_asset_uuid(::std::string* asset_uuid) {
  if (asset_uuid != NULL) {
    set_has_asset_uuid();
  } else {
    clear_has_asset_uuid();
  }
  asset_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asset_uuid);
  // @@protoc_insertion_point(field_set_allocated:msg.FrameResponse.asset_uuid)
}

// repeated .msg.FrameResponse.PerFrameInfo frame_list = 3;
int FrameResponse::frame_list_size() const {
  return frame_list_.size();
}
void FrameResponse::clear_frame_list() {
  frame_list_.Clear();
}
const ::msg::FrameResponse_PerFrameInfo& FrameResponse::frame_list(int index) const {
  // @@protoc_insertion_point(field_get:msg.FrameResponse.frame_list)
  return frame_list_.Get(index);
}
::msg::FrameResponse_PerFrameInfo* FrameResponse::mutable_frame_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg.FrameResponse.frame_list)
  return frame_list_.Mutable(index);
}
::msg::FrameResponse_PerFrameInfo* FrameResponse::add_frame_list() {
  // @@protoc_insertion_point(field_add:msg.FrameResponse.frame_list)
  return frame_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg::FrameResponse_PerFrameInfo >*
FrameResponse::mutable_frame_list() {
  // @@protoc_insertion_point(field_mutable_list:msg.FrameResponse.frame_list)
  return &frame_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg::FrameResponse_PerFrameInfo >&
FrameResponse::frame_list() const {
  // @@protoc_insertion_point(field_list:msg.FrameResponse.frame_list)
  return frame_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg

// @@protoc_insertion_point(global_scope)
